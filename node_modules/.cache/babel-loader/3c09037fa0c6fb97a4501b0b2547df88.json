{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13129\\\\Desktop\\\\Applcation design\\\\react-quiz-game\\\\src\\\\demos\\\\props\\\\state\\\\click-button.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ClickButton() {\n  _s();\n\n  //Array destructuring demo;\n  //const animals = [\"cat\", \"dog\", \"cow\"];\n  //const[animal1, animal2, animal3] =animals;\n  //console.log(animal2);\n  //console.log(animal1);\n  // useState returns back an array that looks like: [currentvalue, setterfunction] = usestate(initial value);\n  const [numClicks, setNumClicks] = useState(0);\n\n  const onButtonClick = () => {\n    setNumClicks(numClicks + 1); //dont mutate state variable directly;\n    //numClicks += 1;\n  };\n\n  const clicksEmote = \" 0_0 \".repeat(numClicks); //longer version\n  //let text = '';\n  //if(numClicks === 0) text = \"you havent clicked yet, click this!\";\n  //else text = `you've clicked ${clicksEmote}`;\n  //or\n\n  const text = numClicks === 0 ? \"you havent clicked yet, click this!\" : `you've clicked ${clicksEmote}`;\n  const buttonStyle = {\n    width: \"5rem\",\n    minheight: \"5rem\",\n    transform: `rotate(${numClicks * 35}deg)`,\n    transition: \"all o.25\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: buttonStyle,\n    onClick: onButtonClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClickButton, \"xEext+QluMTkCzOsprZY93Bjo7c=\");\n\n_c = ClickButton;\nexport default ClickButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClickButton\");","map":{"version":3,"sources":["C:/Users/13129/Desktop/Applcation design/react-quiz-game/src/demos/props/state/click-button.js"],"names":["useState","ClickButton","numClicks","setNumClicks","onButtonClick","clicksEmote","repeat","text","buttonStyle","width","minheight","transform","transition"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AACA,SAASC,WAAT,GAAuB;AAAA;;AACrB;AACA;AACA;AACA;AACA;AAEA;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAMI,aAAa,GAAG,MAAM;AAC1BD,IAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ,CAD0B,CAG1B;AACA;AACD,GALD;;AAOA,QAAMG,WAAW,GAAG,QAAQC,MAAR,CAAeJ,SAAf,CAApB,CAjBqB,CAkBrB;AAEA;AACA;AACA;AACA;;AACA,QAAMK,IAAI,GACRL,SAAS,KAAK,CAAd,GACI,qCADJ,GAEK,kBAAiBG,WAAY,EAHpC;AAKA,QAAMG,WAAW,GAAG;AAClBC,IAAAA,KAAK,EAAE,MADW;AAElBC,IAAAA,SAAS,EAAE,MAFO;AAGlBC,IAAAA,SAAS,EAAG,UAAST,SAAS,GAAG,EAAG,MAHlB;AAIlBU,IAAAA,UAAU,EAAE;AAJM,GAApB;AAOA,sBACE;AAAQ,IAAA,KAAK,EAAEJ,WAAf;AAA4B,IAAA,OAAO,EAAEJ,aAArC;AAAA,cACGG;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzCQN,W;;KAAAA,W;AA2CT,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\r\nfunction ClickButton() {\r\n  //Array destructuring demo;\r\n  //const animals = [\"cat\", \"dog\", \"cow\"];\r\n  //const[animal1, animal2, animal3] =animals;\r\n  //console.log(animal2);\r\n  //console.log(animal1);\r\n\r\n  // useState returns back an array that looks like: [currentvalue, setterfunction] = usestate(initial value);\r\n  const [numClicks, setNumClicks] = useState(0);\r\n\r\n  const onButtonClick = () => {\r\n    setNumClicks(numClicks + 1);\r\n\r\n    //dont mutate state variable directly;\r\n    //numClicks += 1;\r\n  };\r\n\r\n  const clicksEmote = \" 0_0 \".repeat(numClicks);\r\n  //longer version\r\n\r\n  //let text = '';\r\n  //if(numClicks === 0) text = \"you havent clicked yet, click this!\";\r\n  //else text = `you've clicked ${clicksEmote}`;\r\n  //or\r\n  const text =\r\n    numClicks === 0\r\n      ? \"you havent clicked yet, click this!\"\r\n      : `you've clicked ${clicksEmote}`;\r\n\r\n  const buttonStyle = {\r\n    width: \"5rem\",\r\n    minheight: \"5rem\",\r\n    transform: `rotate(${numClicks * 35}deg)`,\r\n    transition: \"all o.25\",\r\n  };\r\n\r\n  return (\r\n    <button style={buttonStyle} onClick={onButtonClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ClickButton;\r\n"]},"metadata":{},"sourceType":"module"}