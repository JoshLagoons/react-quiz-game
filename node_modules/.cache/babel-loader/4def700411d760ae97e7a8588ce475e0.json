{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13129\\\\Desktop\\\\Applcation design\\\\react-quiz-game\\\\src\\\\demos\\\\props\\\\state\\\\CustomIncrement.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction customIncrement() {\n  _s();\n\n  const [value, setValue] = useState(1);\n  const [increment, setIncrement] = useState(1);\n  const [incrementRate, setRate] = useState(1);\n\n  const onCurrentValueChange = e => setValue(e.target.value);\n\n  const onIncrementChange = e => setIncrement(e.target.value);\n\n  const onIncrementRateChange = event => {\n    const newRate = parseFloat(event.target.value);\n    setRate(newRate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"value\",\n        children: \"The current value is:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"currentValue\",\n        type: \"value\",\n        value: value,\n        onChange: onCurrentValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"increment\",\n        children: \"The current increment is:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"increment\",\n        type: \"value\",\n        value: increment,\n        onChange: onIncrementChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"increment\",\n        children: \"Increment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"incrementRate\",\n        type: \"range\",\n        min: \"0\",\n        max: \"50\",\n        step: \"1\",\n        value: incrementRate,\n        onChange: onIncrementRateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: \"\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"reset\",\n      value: \"reset\",\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(customIncrement, \"mjWVDqLqwXWSu8cuZLzRYm2VrGM=\");\n\nexport default customIncrement;","map":{"version":3,"sources":["C:/Users/13129/Desktop/Applcation design/react-quiz-game/src/demos/props/state/CustomIncrement.js"],"names":["useState","customIncrement","value","setValue","increment","setIncrement","incrementRate","setRate","onCurrentValueChange","e","target","onIncrementChange","onIncrementRateChange","event","newRate","parseFloat"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AACA,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACM,aAAD,EAAgBC,OAAhB,IAA2BP,QAAQ,CAAC,CAAD,CAAzC;;AAEF,QAAMQ,oBAAoB,GAAIC,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASR,KAAV,CAA5C;;AACA,QAAMS,iBAAiB,GAAIF,CAAD,IAAOJ,YAAY,CAACI,CAAC,CAACC,MAAF,CAASR,KAAV,CAA7C;;AACA,QAAMU,qBAAqB,GAAIC,KAAD,IAAW;AAEzC,UAAMC,OAAO,GAAGC,UAAU,CAACF,KAAK,CAACH,MAAN,CAAaR,KAAd,CAA1B;AACAK,IAAAA,OAAO,CAACO,OAAD,CAAP;AACC,GAJD;;AAME,sBACE;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,QAAA,EAAE,EAAC,cADH;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,KAAK,EAAEZ,KAHP;AAIA,QAAA,QAAQ,EAAIM;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,QAAA,EAAE,EAAC,WADH;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,KAAK,EAAEJ,SAHP;AAIA,QAAA,QAAQ,EAAIO;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAmBE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,QAAA,EAAE,EAAC,eADH;AAEA,QAAA,IAAI,EAAC,OAFL;AAEa,QAAA,GAAG,EAAC,GAFjB;AAGA,QAAA,GAAG,EAAC,IAHJ;AAGS,QAAA,IAAI,EAAC,GAHd;AAIA,QAAA,KAAK,EAAEL,aAJP;AAKA,QAAA,QAAQ,EAAEM;AALV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,eA6BE;AAAQ,MAAA,OAAO,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF,eA8BE;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,KAAK,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GAjDQX,e;;AAmDT,eAAeA,eAAf","sourcesContent":["import { useState } from \"react\";\r\nfunction customIncrement() {\r\n  const [value, setValue] = useState(1);\r\n  const [increment, setIncrement] = useState(1);\r\n  const [incrementRate, setRate] = useState(1);\r\n\r\nconst onCurrentValueChange = (e) => setValue(e.target.value);\r\nconst onIncrementChange = (e) => setIncrement(e.target.value);\r\nconst onIncrementRateChange = (event) => {\r\n\r\nconst newRate = parseFloat(event.target.value);\r\nsetRate(newRate);\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label htmlFor=\"value\">The current value is:</label>\r\n        <input \r\n        id=\"currentValue\" \r\n        type=\"value\" \r\n        value={value} \r\n        onChange = {onCurrentValueChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"increment\">The current increment is:</label>\r\n        <input \r\n        id=\"increment\" \r\n        type=\"value\" \r\n        value={increment} \r\n        onChange = {onIncrementChange}\r\n        /> \r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"increment\">Increment:</label>\r\n        <input \r\n        id=\"incrementRate\" \r\n        type=\"range\" min=\"0\" \r\n        max=\"50\" step=\"1\" \r\n        value={incrementRate}\r\n        onChange={onIncrementRateChange}\r\n        />\r\n      </div>\r\n      <button onClick=\"\">Add</button>\r\n      <button type=\"reset\" value=\"reset\">\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default customIncrement;\r\n"]},"metadata":{},"sourceType":"module"}