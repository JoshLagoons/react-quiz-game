{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13129\\\\Desktop\\\\Applcation design\\\\react-quiz-game\\\\src\\\\quiz\\\\game.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport EndScreen from \"./end-screen\";\nimport Stats from \"./stats\";\nimport TriviaItem from \"./trvia-item\";\nimport triviaData from \"./trivia-data\";\n/*\r\nThe game is responsible for orchestrating\r\nthe flow of the quiz game.\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const [gameState, SetGameState] = useState({\n    score: 0,\n    triviaIndex: 0,\n    isGameOver: false\n  });\n  const {\n    score,\n    triviaIndex,\n    isGameOver\n  } = gameState;\n  const questionNumber = triviaIndex + 1;\n  const numQuestions = triviaData.length;\n  const triviaQuestion = triviaData[triviaIndex];\n  const {\n    correct_answer,\n    incorrect_answers,\n    question\n  } = triviaQuestion;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: isGameOver ? \"Game is over\" : \"Game is not over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      score: score,\n      QuestionNumber: questionNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TriviaItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EndScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Game, \"B2LV7R3Gz/YX06JpqN8HZhtwblI=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/13129/Desktop/Applcation design/react-quiz-game/src/quiz/game.js"],"names":["useState","EndScreen","Stats","TriviaItem","triviaData","Game","gameState","SetGameState","score","triviaIndex","isGameOver","questionNumber","numQuestions","length","triviaQuestion","correct_answer","incorrect_answers","question"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA;AACA;AACA;AACA;;;;;AACA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC;AACzCQ,IAAAA,KAAK,EAAE,CADkC;AAEzCC,IAAAA,WAAW,EAAE,CAF4B;AAGzCC,IAAAA,UAAU,EAAE;AAH6B,GAAD,CAA1C;AAMA,QAAM;AAACF,IAAAA,KAAD;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA;AAArB,MAAmCJ,SAAzC;AACA,QAAMK,cAAc,GAAGF,WAAW,GAAG,CAArC;AACA,QAAMG,YAAY,GAAGR,UAAU,CAACS,MAAhC;AAEA,QAAMC,cAAc,GAAGV,UAAU,CAACK,WAAD,CAAjC;AACA,QAAM;AAAEM,IAAAA,cAAF;AAAkBC,IAAAA,iBAAlB;AAAqCC,IAAAA;AAArC,MAAkDH,cAAxD;AAGA,sBACE;AAAA,4BAEA;AAAA,gBAAIJ,UAAU,GAAG,cAAH,GAAoB;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA,gBAAIO;AAAJ;AAAA;AAAA;AAAA;AAAA,YAHA,eAIE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAET,KAAd;AAAqB,MAAA,cAAc,EAAEG;AAArC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD;;GAzBQN,I;;KAAAA,I;AA2BT,eAAeA,IAAf","sourcesContent":["import {useState} from \"react\";\r\nimport EndScreen from \"./end-screen\";\r\nimport Stats from \"./stats\";\r\nimport TriviaItem from \"./trvia-item\";\r\nimport triviaData from \"./trivia-data\";\r\n\r\n/*\r\nThe game is responsible for orchestrating\r\nthe flow of the quiz game.\r\n*/\r\nfunction Game() {\r\n  const [gameState, SetGameState] = useState({\r\n    score: 0,\r\n    triviaIndex: 0,\r\n    isGameOver: false,\r\n  });\r\n\r\n  const {score, triviaIndex, isGameOver} = gameState;\r\n  const questionNumber = triviaIndex + 1;\r\n  const numQuestions = triviaData.length;\r\n\r\n  const triviaQuestion = triviaData[triviaIndex];\r\n  const { correct_answer, incorrect_answers, question } = triviaQuestion;\r\n\r\n\r\n  return (\r\n    <>\r\n \r\n    <p>{isGameOver ? \"Game is over\" : \"Game is not over\"}</p>\r\n    <p>{question}</p>\r\n      <Stats score={score} QuestionNumber={questionNumber}/>\r\n      <TriviaItem />\r\n      <EndScreen />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}