{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13129\\\\Desktop\\\\Applcation design\\\\react-quiz-game\\\\src\\\\demos\\\\props\\\\state\\\\CustomIncrement.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomIncrement() {\n  _s();\n\n  const [value, setValue] = useState(1);\n  const setIncrement = useState(1);\n  const [incrementRate, setRate] = useState(1);\n\n  const onCurrentValueChange = e => setValue(e.target.value);\n\n  const onIncrementChange = e => setIncrement(e.target.value);\n\n  const onIncrementRateChange = event => {\n    const newRate = parseFloat(event.target.value);\n    setRate(newRate);\n    console.log(event.target.value);\n  };\n\n  const addButton = () => {\n    //const adding = {value}\n    const adding = {\n      value\n    };\n    adding.rate = incrementRate;\n    console.log(adding);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"value\",\n        children: \"The current value is:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"currentValue\",\n        type: \"value\",\n        value: value,\n        onChange: onCurrentValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"increment\",\n        children: \"The current increment is:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"increment\",\n        type: \"value\",\n        value: incrementRate,\n        onChange: onIncrementChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"increment\",\n        children: \"Increment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"incrementRate\",\n        type: \"range\",\n        min: \"0\",\n        max: \"50\",\n        step: \"1\",\n        value: incrementRate,\n        onChange: onIncrementRateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addButton,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"reset\",\n      value: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomIncrement, \"I+AqM4enLA04POggamYFBZw2duo=\");\n\n_c = CustomIncrement;\nexport default CustomIncrement;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomIncrement\");","map":{"version":3,"sources":["C:/Users/13129/Desktop/Applcation design/react-quiz-game/src/demos/props/state/CustomIncrement.js"],"names":["useState","CustomIncrement","value","setValue","setIncrement","incrementRate","setRate","onCurrentValueChange","e","target","onIncrementChange","onIncrementRateChange","event","newRate","parseFloat","console","log","addButton","adding","rate"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AACA,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMI,YAAY,GAAGJ,QAAQ,CAAC,CAAD,CAA7B;AACA,QAAM,CAACK,aAAD,EAAgBC,OAAhB,IAA2BN,QAAQ,CAAC,CAAD,CAAzC;;AAEF,QAAMO,oBAAoB,GAAIC,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV,CAA5C;;AACA,QAAMQ,iBAAiB,GAAIF,CAAD,IAAOJ,YAAY,CAACI,CAAC,CAACC,MAAF,CAASP,KAAV,CAA7C;;AACA,QAAMS,qBAAqB,GAAIC,KAAD,IAAW;AAEzC,UAAMC,OAAO,GAAGC,UAAU,CAACF,KAAK,CAACH,MAAN,CAAaP,KAAd,CAA1B;AACAI,IAAAA,OAAO,CAACO,OAAD,CAAP;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACH,MAAN,CAAaP,KAAzB;AACC,GALD;;AAOA,QAAMe,SAAS,GAAG,MAAM;AACtB;AACA,UAAMC,MAAM,GAAG;AAAChB,MAAAA;AAAD,KAAf;AACAgB,IAAAA,MAAM,CAACC,IAAP,GAAcd,aAAd;AAEAU,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AAED,GAPD;;AASE,sBACE;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,QAAA,EAAE,EAAC,cADH;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,KAAK,EAAEhB,KAHP;AAIA,QAAA,QAAQ,EAAIK;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,QAAA,EAAE,EAAC,WADH;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,KAAK,EAAEF,aAHP;AAIA,QAAA,QAAQ,EAAIK;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAmBE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,QAAA,EAAE,EAAC,eADH;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,GAAG,EAAC,GAHJ;AAIA,QAAA,GAAG,EAAC,IAJJ;AAIS,QAAA,IAAI,EAAC,GAJd;AAKA,QAAA,KAAK,EAAEL,aALP;AAMA,QAAA,QAAQ,EAAEM;AANV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,eA8BE;AAAQ,MAAA,OAAO,EAAEM,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF,eA+BE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GA1DQhB,e;;KAAAA,e;AA4DT,eAAeA,eAAf","sourcesContent":["import { useState } from \"react\";\r\nfunction CustomIncrement() {\r\n  const [value, setValue] = useState(1);\r\n  const setIncrement = useState(1);\r\n  const [incrementRate, setRate] = useState(1);\r\n\r\nconst onCurrentValueChange = (e) => setValue(e.target.value);\r\nconst onIncrementChange = (e) => setIncrement(e.target.value);\r\nconst onIncrementRateChange = (event) => {\r\n\r\nconst newRate = parseFloat(event.target.value);\r\nsetRate(newRate);\r\nconsole.log(event.target.value);\r\n};\r\n\r\nconst addButton = () => {\r\n  //const adding = {value}\r\n  const adding = {value}\r\n  adding.rate = incrementRate;\r\n  \r\n  console.log(adding);\r\n \r\n}\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label htmlFor=\"value\">The current value is:</label>\r\n        <input \r\n        id=\"currentValue\" \r\n        type=\"value\" \r\n        value={value}\r\n        onChange = {onCurrentValueChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"increment\">The current increment is:</label>\r\n        <input \r\n        id=\"increment\" \r\n        type=\"value\" \r\n        value={incrementRate} \r\n        onChange = {onIncrementChange}\r\n        /> \r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"increment\">Increment:</label>\r\n        <input \r\n        id=\"incrementRate\" \r\n        type=\"range\" \r\n        min=\"0\" \r\n        max=\"50\" step=\"1\" \r\n        value={incrementRate}\r\n        onChange={onIncrementRateChange}\r\n        />\r\n      </div>\r\n      <button onClick={addButton}>Add</button>\r\n      <input type=\"reset\" value=\"reset\"></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomIncrement;\r\n"]},"metadata":{},"sourceType":"module"}