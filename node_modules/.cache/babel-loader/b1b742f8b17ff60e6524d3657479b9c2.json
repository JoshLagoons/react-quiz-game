{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13129\\\\Desktop\\\\Applcation design\\\\react-quiz-game\\\\src\\\\demos\\\\props\\\\state\\\\CustomIncrement.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomIncrement() {\n  _s();\n\n  const [value, setValue] = useState(0);\n  const setIncrement = useState(1);\n  const [incrementRate, setRate] = useState(1);\n\n  const onCurrentValueChange = e => setValue(e.target.value);\n\n  const onIncrementChange = e => setIncrement(e.target.value);\n\n  const onIncrementRateChange = event => {\n    const newRate = parseFloat(event.target.value);\n    setRate(newRate);\n    console.log(event.target.value);\n  };\n\n  const addButton = () => {\n    //const adding = {value}\n    const adding = {\n      value\n    };\n    adding.rate = incrementRate; //Dont know how to add my value to my increment, tried a lot of ways.\n    //for somereason my add button became my reset \n\n    console.log(adding);\n  };\n\n  const resetButton = () => {\n    function YEP() {\n      document.getElementById(\"haha\").reset();\n    }\n\n    console.log(resetButton);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"haha\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"value\",\n          children: \"The current value is:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"currentValue\",\n          type: \"value\",\n          value: value,\n          onChange: onCurrentValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"increment\",\n          children: \"The current increment is:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"increment\",\n          type: \"value\",\n          value: incrementRate,\n          onChange: onIncrementChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"increment\",\n          children: \"Increment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"incrementRate\",\n          type: \"range\",\n          min: \"0\",\n          max: \"50\",\n          step: \"1\",\n          value: incrementRate,\n          onChange: onIncrementRateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addButton,\n        id: \"add\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        value: \"reset\",\n        onClick: resetButton,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n/*\r\nlet addbtn = document.querySelector(`#add`);\r\nlet currentValue = document.querySelector(`#currentValue`)\r\naddbtn.addEventListener(`click`, () => {\r\n\r\n  currentValue.value = parseInt(currentValue.value) + 1;\r\n});\r\n*/\n\n\n_s(CustomIncrement, \"RKHfF7ElAotc+WfmPGMf4OQWKu8=\");\n\n_c = CustomIncrement;\nexport default CustomIncrement;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomIncrement\");","map":{"version":3,"sources":["C:/Users/13129/Desktop/Applcation design/react-quiz-game/src/demos/props/state/CustomIncrement.js"],"names":["useState","CustomIncrement","value","setValue","setIncrement","incrementRate","setRate","onCurrentValueChange","e","target","onIncrementChange","onIncrementRateChange","event","newRate","parseFloat","console","log","addButton","adding","rate","resetButton","YEP","document","getElementById","reset"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nfunction CustomIncrement() {\r\n  const [value, setValue] = useState(0);\r\n  const setIncrement = useState(1);\r\n  const [incrementRate, setRate] = useState(1);\r\n\r\nconst onCurrentValueChange = (e) => setValue(e.target.value);\r\nconst onIncrementChange = (e) => setIncrement(e.target.value);\r\nconst onIncrementRateChange = (event) => {\r\n\r\nconst newRate = parseFloat(event.target.value);\r\nsetRate(newRate);\r\nconsole.log(event.target.value);\r\n};\r\n\r\nconst addButton = () => {\r\n  //const adding = {value}\r\n  const adding = {value}\r\n  adding.rate = incrementRate;\r\n  //Dont know how to add my value to my increment, tried a lot of ways.\r\n  //for somereason my add button became my reset \r\n  console.log(adding);\r\n \r\n}\r\nconst resetButton = () => {\r\n\r\n function YEP() {\r\n   document.getElementById(\"haha\").reset();\r\n }\r\n  console.log(resetButton);\r\n}\r\n\r\n  return (\r\n    <form id = \"haha\">\r\n       <div>\r\n      <div>\r\n        <label htmlFor=\"value\">The current value is:</label>\r\n        <input \r\n        id=\"currentValue\" \r\n        type=\"value\" \r\n        value={value}\r\n        onChange = {onCurrentValueChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"increment\">The current increment is:</label>\r\n        <input \r\n        id=\"increment\" \r\n        type=\"value\" \r\n        value={incrementRate} \r\n        onChange = {onIncrementChange}\r\n        /> \r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"increment\">Increment:</label>\r\n        <input \r\n        id=\"incrementRate\" \r\n        type=\"range\" \r\n        min=\"0\" \r\n        max=\"50\" step=\"1\" \r\n        value={incrementRate}\r\n        onChange={onIncrementRateChange}\r\n        />\r\n      </div>\r\n      <button onClick={addButton} id= \"add\">Add</button>\r\n      <button type=\"reset\" value=\"reset\" onClick={resetButton}>Reset</button>\r\n    \r\n    </div>\r\n    </form>\r\n   \r\n  );\r\n\r\n}\r\n\r\n/*\r\nlet addbtn = document.querySelector(`#add`);\r\nlet currentValue = document.querySelector(`#currentValue`)\r\naddbtn.addEventListener(`click`, () => {\r\n\r\n  currentValue.value = parseInt(currentValue.value) + 1;\r\n});\r\n*/\r\nexport default CustomIncrement;\r\n"]},"metadata":{},"sourceType":"module"}