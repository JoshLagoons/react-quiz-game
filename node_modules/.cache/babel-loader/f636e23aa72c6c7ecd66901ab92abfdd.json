{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13129\\\\Desktop\\\\Applcation design\\\\react-quiz-game\\\\src\\\\demos\\\\props\\\\state\\\\speak-form.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SpeakForm() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [rate, setRate] = useState(1); //change event handler. it gets a event for the triggered change.\n\n  /*\r\n    const onMessageChange = (event) => {\r\n        console.log(\"change!\");\r\n        console.log(event.target);\r\n        console.log(event.target.value);\r\n        const newMessage = event.target.value;\r\n        setMessage(newMessage;\r\n    };\r\n    */\n\n  const onMessageChange = e => setMessage(e.target.value);\n\n  const onRateChange = event => {\n    //console.log(event.target.value);\n    const newRate = parseFloat(event.target.value);\n    setRate(newRate);\n  };\n\n  const speak = () => {\n    //alert(message);\n    speechSynthesis.cancel();\n    const utterance = new SpeechSynthesisUtterance(message);\n    utterance.pitch = 1;\n    utterance.rate = rate;\n    speechSynthesis.speak(utterance);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"message\",\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"message\",\n        type: \"text\",\n        value: message,\n        onChange: onMessageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rate\",\n        children: \"Rate:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"rate\",\n        type: \"range\",\n        min: \"0\",\n        max: \"20\",\n        step: \"1\",\n        value: rate,\n        onChange: onRateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: speak,\n      children: \"Speak:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SpeakForm, \"CEdItZjHJcQE6dc1pa/v+Oc2wag=\");\n\n_c = SpeakForm;\nexport default SpeakForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpeakForm\");","map":{"version":3,"sources":["C:/Users/13129/Desktop/Applcation design/react-quiz-game/src/demos/props/state/speak-form.js"],"names":["useState","SpeakForm","message","setMessage","rate","setRate","onMessageChange","e","target","value","onRateChange","event","newRate","parseFloat","speak","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","pitch"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,CAAD,CAAhC,CAFmB,CAInB;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,QAAMM,eAAe,GAAIC,CAAD,IAAOJ,UAAU,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzC;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B;AACA,UAAMC,OAAO,GAAGC,UAAU,CAACF,KAAK,CAACH,MAAN,CAAaC,KAAd,CAA1B;AACAJ,IAAAA,OAAO,CAACO,OAAD,CAAP;AACD,GAJD;;AAMA,QAAME,KAAK,GAAG,MAAM;AAClB;AACAC,IAAAA,eAAe,CAACC,MAAhB;AACA,UAAMC,SAAS,GAAG,IAAIC,wBAAJ,CAA6BhB,OAA7B,CAAlB;AACAe,IAAAA,SAAS,CAACE,KAAV,GAAkB,CAAlB;AACAF,IAAAA,SAAS,CAACb,IAAV,GAAiBA,IAAjB;AACAW,IAAAA,eAAe,CAACD,KAAhB,CAAsBG,SAAtB;AACD,GAPD;;AAQA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,EAAE,EAAC,SADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEf,OAHT;AAIE,QAAA,QAAQ,EAAEI;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,GAAG,EAAC,GAHN;AAIE,QAAA,GAAG,EAAC,IAJN;AAKE,QAAA,IAAI,EAAC,GALP;AAME,QAAA,KAAK,EAAEF,IANT;AAOE,QAAA,QAAQ,EAAEM;AAPZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAsBE;AAAQ,MAAA,OAAO,EAAEI,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAvDQb,S;;KAAAA,S;AAyDT,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction SpeakForm() {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [rate, setRate] = useState(1);\r\n\r\n  //change event handler. it gets a event for the triggered change.\r\n  /*\r\n    const onMessageChange = (event) => {\r\n        console.log(\"change!\");\r\n        console.log(event.target);\r\n        console.log(event.target.value);\r\n        const newMessage = event.target.value;\r\n        setMessage(newMessage;\r\n    };\r\n    */\r\n  const onMessageChange = (e) => setMessage(e.target.value);\r\n  const onRateChange = (event) => {\r\n    //console.log(event.target.value);\r\n    const newRate = parseFloat(event.target.value);\r\n    setRate(newRate);\r\n  };\r\n\r\n  const speak = () => {\r\n    //alert(message);\r\n    speechSynthesis.cancel();\r\n    const utterance = new SpeechSynthesisUtterance(message);\r\n    utterance.pitch = 1;\r\n    utterance.rate = rate;\r\n    speechSynthesis.speak(utterance);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label htmlFor=\"message\">Message:</label>\r\n        <input\r\n          id=\"message\"\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={onMessageChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"rate\">Rate:</label>\r\n        <input\r\n          id=\"rate\"\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"20\"\r\n          step=\"1\"\r\n          value={rate}\r\n          onChange={onRateChange}\r\n        />\r\n      </div>\r\n      <button onClick={speak}>Speak:</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpeakForm;\r\n"]},"metadata":{},"sourceType":"module"}